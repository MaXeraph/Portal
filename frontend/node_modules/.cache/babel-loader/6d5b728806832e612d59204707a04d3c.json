{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\KaRjn\\\\Desktop\\\\CSC309\\\\team51\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\KaRjn\\\\Desktop\\\\CSC309\\\\team51\\\\frontend\\\\src\\\\context\\\\CoursesContext.jsx\";\nimport React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nexport const Context = createContext({});\nexport const Provider = props => {\n  // Initial values are obtained from the props\n  const initialCourses = props.courses,\n        children = props.children; // Use State to keep the values\n\n  let _useState = useState(initialCourses),\n      _useState2 = _slicedToArray(_useState, 2),\n      courses = _useState2[0],\n      setCourses = _useState2[1];\n\n  let _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      curCourseName = _useState4[0],\n      setCurCourseName = _useState4[1];\n\n  let _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      curChosenDepartment = _useState6[0],\n      setCurChosenDepartment = _useState6[1];\n\n  const addCourse = p => {\n    console.log(curCourseName);\n    console.log(curChosenDepartment);\n    setCourses(courses.concat([curCourseName]));\n    setCurCourseName(\"\");\n  };\n\n  const updateCourseName = p => {\n    setCurCourseName(p.target.value);\n  };\n\n  const chooseDepartment = p => {\n    setCurChosenDepartment(p.target.value);\n  }; // Make the context object:\n\n\n  const coursesContext = {\n    courses,\n    addCourse,\n    updateCourseName,\n    chooseDepartment,\n    curCourseName,\n    curChosenDepartment\n  }; // pass the value in provider and return\n\n  return React.createElement(Context.Provider, {\n    value: coursesContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, children);\n};\nconst Consumer = Context.Consumer;\nexport { Consumer };\nexport { Context as CoursesContext, Provider as CoursesContextProvider, Consumer as CoursesContextConsumer };\nProvider.propTypes = {\n  users: PropTypes.array\n};\nProvider.defaultProps = {\n  courses: []\n};","map":{"version":3,"sources":["C:/Users/KaRjn/Desktop/CSC309/team51/frontend/src/context/CoursesContext.jsx"],"names":["React","createContext","useState","PropTypes","Context","Provider","props","initialCourses","courses","children","setCourses","curCourseName","setCurCourseName","curChosenDepartment","setCurChosenDepartment","addCourse","p","console","log","concat","updateCourseName","target","value","chooseDepartment","coursesContext","Consumer","CoursesContext","CoursesContextProvider","CoursesContextConsumer","propTypes","users","array","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,OAAO,GAAGH,aAAa,CAAC,EAAD,CAA7B;AAEP,OAAO,MAAMI,QAAQ,GAAGC,KAAK,IAAI;AAC/B;AAD+B,QAEdC,cAFc,GAEeD,KAFf,CAEvBE,OAFuB;AAAA,QAEEC,QAFF,GAEeH,KAFf,CAEEG,QAFF,EAI/B;;AAJ+B,kBAKHP,QAAQ,CAACK,cAAD,CALL;AAAA;AAAA,MAK1BC,OAL0B;AAAA,MAKjBE,UALiB;;AAAA,mBAMSR,QAAQ,CAAC,EAAD,CANjB;AAAA;AAAA,MAM1BS,aAN0B;AAAA,MAMXC,gBANW;;AAAA,mBAOqBV,QAAQ,CAAC,EAAD,CAP7B;AAAA;AAAA,MAO1BW,mBAP0B;AAAA,MAOLC,sBAPK;;AAS/B,QAAMC,SAAS,GAAGC,CAAC,IAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYP,aAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYL,mBAAZ;AACAH,IAAAA,UAAU,CAACF,OAAO,CAACW,MAAR,CAAe,CAACR,aAAD,CAAf,CAAD,CAAV;AACAC,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GALD;;AAOA,QAAMQ,gBAAgB,GAAGJ,CAAC,IAAI;AAC5BJ,IAAAA,gBAAgB,CAACI,CAAC,CAACK,MAAF,CAASC,KAAV,CAAhB;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGP,CAAC,IAAI;AAC5BF,IAAAA,sBAAsB,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV,CAAtB;AACD,GAFD,CApB+B,CAwB/B;;;AACA,QAAME,cAAc,GAAG;AACrBhB,IAAAA,OADqB;AAErBO,IAAAA,SAFqB;AAGrBK,IAAAA,gBAHqB;AAIrBG,IAAAA,gBAJqB;AAKrBZ,IAAAA,aALqB;AAMrBE,IAAAA;AANqB,GAAvB,CAzB+B,CAkC/B;;AACA,SAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEW,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0Cf,QAA1C,CAAP;AACD,CApCM;MAsCQgB,Q,GAAarB,O,CAAbqB,Q;;AAEf,SACErB,OAAO,IAAIsB,cADb,EAEErB,QAAQ,IAAIsB,sBAFd,EAGEF,QAAQ,IAAIG,sBAHd;AAMAvB,QAAQ,CAACwB,SAAT,GAAqB;AACnBC,EAAAA,KAAK,EAAE3B,SAAS,CAAC4B;AADE,CAArB;AAIA1B,QAAQ,CAAC2B,YAAT,GAAwB;AACtBxB,EAAAA,OAAO,EAAE;AADa,CAAxB","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Context = createContext({});\r\n\r\nexport const Provider = props => {\r\n  // Initial values are obtained from the props\r\n  const { courses: initialCourses, children } = props;\r\n\r\n  // Use State to keep the values\r\n  let [courses, setCourses] = useState(initialCourses);\r\n  let [curCourseName, setCurCourseName] = useState(\"\");\r\n  let [curChosenDepartment, setCurChosenDepartment] = useState(\"\");\r\n\r\n  const addCourse = p => {\r\n    console.log(curCourseName);\r\n    console.log(curChosenDepartment);\r\n    setCourses(courses.concat([curCourseName]));\r\n    setCurCourseName(\"\");\r\n  };\r\n\r\n  const updateCourseName = p => {\r\n    setCurCourseName(p.target.value);\r\n  };\r\n\r\n  const chooseDepartment = p => {\r\n    setCurChosenDepartment(p.target.value);\r\n  };\r\n\r\n  // Make the context object:\r\n  const coursesContext = {\r\n    courses,\r\n    addCourse,\r\n    updateCourseName,\r\n    chooseDepartment,\r\n    curCourseName,\r\n    curChosenDepartment\r\n  };\r\n\r\n  // pass the value in provider and return\r\n  return <Context.Provider value={coursesContext}>{children}</Context.Provider>;\r\n};\r\n\r\nexport const { Consumer } = Context;\r\n\r\nexport {\r\n  Context as CoursesContext,\r\n  Provider as CoursesContextProvider,\r\n  Consumer as CoursesContextConsumer\r\n};\r\n\r\nProvider.propTypes = {\r\n  users: PropTypes.array\r\n};\r\n\r\nProvider.defaultProps = {\r\n  courses: []\r\n};\r\n"]},"metadata":{},"sourceType":"module"}